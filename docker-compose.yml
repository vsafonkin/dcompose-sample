services:
  nginx_server:
    image: nginx:1.27
    restart: always
    depends_on:
      - myapp
    volumes:
      - ./config/nginx:/etc/nginx
      - ./logs/nginx:/var/log/nginx
      - ./public:/usr/share/nginx/html
      - /etc/letsencrypt:/etc/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-server.rule=Host(`${MAIN_HOST}`)"
      - "traefik.http.services.nginx-server.loadbalancer.server.port=80"
  myapp:
    build:
      context: ./app
    restart: always

  traefik:
    image: traefik:3.3.3
    restart: always
    depends_on:
      - nginx_server
    environment:
      TZ: "Europe/Moscow"
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/traefik/letsencrypt:/letsencrypt
      - ./data/traefik/certs/:/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/traefik.yml:/traefik.yml:ro
      - ./config/traefik/dynamic/:/dynamic/:ro
    labels:
      traefik.enable: true

      traefik.http.routers.traefik-ssl.rule: Host(`traefik.${MAIN_HOST}`) || Host(`www.traefik.${MAIN_HOST}`)
      traefik.http.routers.traefik-ssl.entrypoints: https
      traefik.http.routers.traefik-ssl.tls: true
      traefik.http.routers.traefik-ssl.tls.certresolver: letsencrypt
      traefik.http.routers.traefik-ssl.middlewares: ${TRAEFIK_SSL_MIDDLEWARES}
      traefik.http.routers.traefik-ssl.service: api@internal

      traefik.http.routers.traefik.rule: Host(`traefik.${MAIN_HOST}`) || Host(`www.traefik.${MAIN_HOST}`)
      traefik.http.routers.traefik.entrypoints: http
      traefik.http.routers.traefik.middlewares: ${TRAEFIK_MIDDLEWARES}
      traefik.http.routers.traefik.service: api@internal

      traefik.http.services.traefik.loadbalancer.server.port: 80
